trigger:
- main

variables:
  buildConfiguration: Release
  DotNetVersion: 6.0.400

stages:
  - stage: BuildAndroid
    jobs:
    - job: BuildMAUIApps
      displayName: Build PipelineSample App
      pool:
        vmImage: 'windows-2022'
        demands:
          - MSBuild

      steps:

        - task: UseDotNet@2
          displayName: .NET Version
          inputs:
            packageType: 'sdk'
            version: '$(DotNetVersion)'
            
        - task: Bash@3
          displayName: Install MAUI
          inputs:
            targetType: inline
            script: |
              dotnet nuget locales all --clear
              dotnet workload install maui --source https://aka.ms/dotnet6/nuget/index.json --source https://api.nuget.org/v3/index.json
              dotnet workload install android maui --source https://aka.ms/dotnet6/nuget/index.json --source https://api.nuget.org/v3/index.json

        - task: Bash@3
          displayName: Restore nuget
          inputs:
            targetType: inline
            script: |
              dotnet restore ./DotnetMauiApp/DotnetMauiApp.csproj
              dotnet restore ./PipelineSampleCore/PipelineSampleCore.csproj
              dotnet restore ./PipelineSampleTest/PipelineSampleTest.csproj


        - task: Bash@3
          displayName: Build and Run UnitTests
          inputs:
            targetType: inline
            script: |
              dotnet build ./PipelineSampleCore/PipelineSampleCore.csproj
              dotnet build ./PipelineSampleTest/PipelineSampleTest.csproj
              dotnet test ./PipelineSampleTest/PipelineSampleTest.csproj --logger:"trx;logfilename=testResults.trx"

        - task: PublishTestResults@2
          inputs:
            testResultsFormat: XUnit
            testResultsFiles: '**/**/*.trx'
            testRunTitle: Service Test
          condition: always()

        - task: DownloadSecureFile@1
          name: keystore
          displayName: Download Secure File 
          inputs:
            secureFile: 'DotnetMauiApp.keystore'

        - script: |
            echo Downloaded $(keystore.secureFilePath)
            echo Working Directory $(System.DefaultWorkingDirectory)\\DotnetMauiApp.keystore
            mv $(keystore.secureFilePath) $(System.DefaultWorkingDirectory)
          displayName: Move .env to Working Directory


        - task: Bash@3
          displayName: Build Android App
          inputs:
            targetType: inline
            script: |
              dotnet publish ./DotnetMauiApp/DotnetMauiApp.csproj -f:net6.0-android -c:$(BuildConfiguration) //p:AndroidSigningKeyPass=$(keystore-password) //p:AndroidSigningStorePass=$(keystore-password) //p:AndroidSigningKeyStore=$(System.DefaultWorkingDirectory)\\DotnetMauiApp.keystore //p:AndroidSigningKeyAlias=$(key-alias)

        - task: DotNetCoreCLI@2
          inputs:
            command: 'publish'
            projects: ./PipelineSampleCore/PipelineSampleCore.csproj
            arguments: '-f:net6.0-android -c:$(BuildConfiguration) /p:AndroidSigningKeyPass="$(keystore-password)" /p:AndroidSigningStorePass="$(keystore-password)" /p:AndroidSigningKeyStore="$(System.DefaultWorkingDirectory)"\DotnetMauiApp.keystore //p:AndroidSigningKeyAlias="$(key-alias)"'
            
            
            
     
            
#   - task: DotNetCoreCLI@2
#   displayName: 'Build csproj'
#   inputs:
#     command: 'publish'
#     zipAfterPublish: false
#     publishWebProjects: false
#     projects: '$(ProjectName)\$(ProjectName).csproj'
#     arguments: '--configuration $(BuildConfiguration) --output "$(build.artifactstagingdirectory)" --framework net5.0-windows  --self-contained true --runtime win-x86 /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true'
#     modifyOutputPath: false
          
        
        - task: CopyFiles@2
          inputs:
            Contents: |
              ./DotnetMauiApp/bin/Release/net6.0-android/publish/*.apk
              ./DotnetMauiApp/bin/Release/net6.0-android/publish/*Signed.aab
            TargetFolder: '$(Build.ArtifactStagingDirectory)'

        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: $(Build.ArtifactStagingDirectory)
            ArtifactName: drop_android
            publishLocation: Container
